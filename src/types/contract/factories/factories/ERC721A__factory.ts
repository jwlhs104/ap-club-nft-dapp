/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721A, ERC721AInterface } from "../ERC721A";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextOwnerToExplicitlySet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006033556000603c5534801561001a57600080fd5b506120c58061002a6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80634f6ccce7116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd1461028a578063d7224ba01461029d578063e985e9c5146102a657600080fd5b8063a22cb46514610264578063b88d4fde1461027757600080fd5b80634f6ccce7146102235780636352211e1461023657806370a082311461024957806395d89b411461025c57600080fd5b806318160ddd116101095780632f745c59116100ee5780632f745c59146101ea57806342842e0e146101fd57806342966c681461021057600080fd5b806318160ddd146101c557806323b872dd146101d757600080fd5b806301ffc9a71461013b57806306fdde0314610163578063081812fc14610178578063095ea7b3146101b0575b600080fd5b61014e610149366004611cd9565b6102ef565b60405190151581526020015b60405180910390f35b61016b6103d4565b60405161015a9190611dee565b61018b610186366004611d13565b610466565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b6101c36101be366004611caf565b61052d565b005b6033545b60405190815260200161015a565b6101c36101e5366004611b3d565b6106bb565b6101c96101f8366004611caf565b6106c6565b6101c361020b366004611b3d565b6108d5565b6101c361021e366004611d13565b6108f0565b6101c9610231366004611d13565b6109bf565b61018b610244366004611d13565b610a5c565b6101c9610257366004611aef565b610a6e565b61016b610b4e565b6101c3610272366004611c73565b610b5d565b6101c3610285366004611b79565b610c74565b61016b610298366004611d13565b610d1d565b6101c9603c5481565b61014e6102b4366004611b0a565b73ffffffffffffffffffffffffffffffffffffffff9182166000908152603b6020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061038257507fffffffff0000000000000000000000000000000000000000000000000000000082167f780e9d6300000000000000000000000000000000000000000000000000000000145b806103ce57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060603680546103e390611f01565b80601f016020809104026020016040519081016040528092919081815260200182805461040f90611f01565b801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b5050505050905090565b6000610473826033541190565b610504576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560448201527f78697374656e7420746f6b656e0000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152603a602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061053882610a5c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084016104fb565b3373ffffffffffffffffffffffffffffffffffffffff8216148061061f575061061f81336102b4565b6106ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c0000000000000060648201526084016104fb565b6106b6838383610e1f565b505050565b6106b6838383610ea0565b60006106d183610a6e565b821061075f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f455243373231413a206f776e657220696e646578206f7574206f6620626f756e60448201527f647300000000000000000000000000000000000000000000000000000000000060648201526084016104fb565b600061076a60335490565b905060008060005b8381101561084c5760008181526038602090815260409182902082518084019093525473ffffffffffffffffffffffffffffffffffffffff81168084527401000000000000000000000000000000000000000090910467ffffffffffffffff1691830191909152156107e357805192505b8773ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839578684141561082b575093506103ce92505050565b8361083581611f55565b9450505b508061084481611f55565b915050610772565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060448201527f6f776e657220627920696e64657800000000000000000000000000000000000060648201526084016104fb565b6106b683838360405180602001604052806000815250610c74565b60006108fb82610a5c565b90503373ffffffffffffffffffffffffffffffffffffffff82161480610926575061092681336102b4565b6109b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c0000000000000060648201526084016104fb565b6109bb826113c5565b5050565b60006109ca60335490565b8210610a58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f7560448201527f6e6473000000000000000000000000000000000000000000000000000000000060648201526084016104fb565b5090565b6000610a67826115b2565b5192915050565b600073ffffffffffffffffffffffffffffffffffffffff8216610b13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f455243373231413a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104fb565b5073ffffffffffffffffffffffffffffffffffffffff166000908152603960205260409020546fffffffffffffffffffffffffffffffff1690565b6060603780546103e390611f01565b73ffffffffffffffffffffffffffffffffffffffff8216331415610bdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f455243373231413a20617070726f766520746f2063616c6c657200000000000060448201526064016104fb565b336000818152603b6020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610c7f848484610ea0565b610c8b84848484611794565b610d17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260448201527f6563656976657220696d706c656d656e7465720000000000000000000000000060648201526084016104fb565b50505050565b6060610d2a826033541190565b610db6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104fb565b6000610dcd60408051602081019091526000815290565b90506000815111610ded5760405180602001604052806000815250610e18565b80610df784611994565b604051602001610e08929190611d76565b6040516020818303038152906040525b9392505050565b6000828152603a602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610eab826115b2565b805190915060009073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610f09575033610ef184610466565b73ffffffffffffffffffffffffffffffffffffffff16145b80610f1b57508151610f1b90336102b4565b905080610faa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016104fb565b8473ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff1614611069576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243373231413a207472616e736665722066726f6d20696e636f727265637460448201527f206f776e6572000000000000000000000000000000000000000000000000000060648201526084016104fb565b73ffffffffffffffffffffffffffffffffffffffff841661110c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243373231413a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104fb565b61111c6000848460000151610e1f565b73ffffffffffffffffffffffffffffffffffffffff851660009081526039602052604081208054600192906111649084906fffffffffffffffffffffffffffffffff16611e58565b82546101009290920a6fffffffffffffffffffffffffffffffff81810219909316918316021790915573ffffffffffffffffffffffffffffffffffffffff8616600090815260396020526040812080546001945090926111c691859116611e01565b82546fffffffffffffffffffffffffffffffff9182166101009390930a92830291909202199091161790555060408051808201825273ffffffffffffffffffffffffffffffffffffffff808716825267ffffffffffffffff42811660208085019182526000898152603890915294852093518454915190921674010000000000000000000000000000000000000000027fffffffff00000000000000000000000000000000000000000000000000000000909116919092161717905561128d846001611e2c565b60008181526038602052604090205490915073ffffffffffffffffffffffffffffffffffffffff16611362576112c4816033541190565b1561136257604080518082018252845173ffffffffffffffffffffffffffffffffffffffff908116825260208087015167ffffffffffffffff908116828501908152600087815260389093529490912092518354945190911674010000000000000000000000000000000000000000027fffffffff000000000000000000000000000000000000000000000000000000009094169116179190911790555b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b60006113d0826115b2565b805190915060003373ffffffffffffffffffffffffffffffffffffffff8316148061141857503361140085610466565b73ffffffffffffffffffffffffffffffffffffffff16145b80611428575061142882336102b4565b9050806114b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016104fb565b6114c360008584610e1f565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260396020526040812080546001929061150b9084906fffffffffffffffffffffffffffffffff16611e58565b82546fffffffffffffffffffffffffffffffff9182166101009390930a92830291909202199091161790555060008481526038602052604080822080547fffffffff000000000000000000000000000000000000000000000000000000001690555185919073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4610d17565b60408051808201909152600080825260208201526115d1826033541190565b61165d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243373231413a206f776e657220717565727920666f72206e6f6e6578697360448201527f74656e7420746f6b656e0000000000000000000000000000000000000000000060648201526084016104fb565b60006035548310611683576035546116759084611e89565b611680906001611e2c565b90505b825b81811061170b5760008181526038602090815260409182902082518084019093525473ffffffffffffffffffffffffffffffffffffffff81168084527401000000000000000000000000000000000000000090910467ffffffffffffffff1691830191909152156116f857949350505050565b508061170381611ecc565b915050611685565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f455243373231413a20756e61626c6520746f2064657465726d696e652074686560448201527f206f776e6572206f6620746f6b656e000000000000000000000000000000000060648201526084016104fb565b600073ffffffffffffffffffffffffffffffffffffffff84163b15611988576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a029061180b903390899088908890600401611da5565b602060405180830381600087803b15801561182557600080fd5b505af1925050508015611873575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261187091810190611cf6565b60015b61193d573d8080156118a1576040519150601f19603f3d011682016040523d82523d6000602084013e6118a6565b606091505b508051611935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260448201527f6563656976657220696d706c656d656e7465720000000000000000000000000060648201526084016104fb565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014905061198c565b5060015b949350505050565b6060816119d457505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156119fe57806119e881611f55565b91506119f79050600a83611e44565b91506119d8565b60008167ffffffffffffffff811115611a1957611a1961202f565b6040519080825280601f01601f191660200182016040528015611a43576020820181803683370190505b5090505b841561198c57611a58600183611e89565b9150611a65600a86611f8e565b611a70906030611e2c565b60f81b818381518110611a8557611a85612000565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611abf600a86611e44565b9450611a47565b803573ffffffffffffffffffffffffffffffffffffffff81168114611aea57600080fd5b919050565b600060208284031215611b0157600080fd5b610e1882611ac6565b60008060408385031215611b1d57600080fd5b611b2683611ac6565b9150611b3460208401611ac6565b90509250929050565b600080600060608486031215611b5257600080fd5b611b5b84611ac6565b9250611b6960208501611ac6565b9150604084013590509250925092565b60008060008060808587031215611b8f57600080fd5b611b9885611ac6565b9350611ba660208601611ac6565b925060408501359150606085013567ffffffffffffffff80821115611bca57600080fd5b818701915087601f830112611bde57600080fd5b813581811115611bf057611bf061202f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611c3657611c3661202f565b816040528281528a6020848701011115611c4f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611c8657600080fd5b611c8f83611ac6565b915060208301358015158114611ca457600080fd5b809150509250929050565b60008060408385031215611cc257600080fd5b611ccb83611ac6565b946020939093013593505050565b600060208284031215611ceb57600080fd5b8135610e188161205e565b600060208284031215611d0857600080fd5b8151610e188161205e565b600060208284031215611d2557600080fd5b5035919050565b60008151808452611d44816020860160208601611ea0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60008351611d88818460208801611ea0565b835190830190611d9c818360208801611ea0565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611de46080830184611d2c565b9695505050505050565b602081526000610e186020830184611d2c565b60006fffffffffffffffffffffffffffffffff808316818516808303821115611d9c57611d9c611fa2565b60008219821115611e3f57611e3f611fa2565b500190565b600082611e5357611e53611fd1565b500490565b60006fffffffffffffffffffffffffffffffff83811690831681811015611e8157611e81611fa2565b039392505050565b600082821015611e9b57611e9b611fa2565b500390565b60005b83811015611ebb578181015183820152602001611ea3565b83811115610d175750506000910152565b600081611edb57611edb611fa2565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b600181811c90821680611f1557607f821691505b60208210811415611f4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f8757611f87611fa2565b5060010190565b600082611f9d57611f9d611fd1565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461208c57600080fd5b5056fea26469706673582212207dcf9403772c67433b06e42fa16a1dfb5082362990a57c91db91ca9d4117184364736f6c63430008070033";

export class ERC721A__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721A> {
    return super.deploy(overrides || {}) as Promise<ERC721A>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721A {
    return super.attach(address) as ERC721A;
  }
  connect(signer: Signer): ERC721A__factory {
    return super.connect(signer) as ERC721A__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new utils.Interface(_abi) as ERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A {
    return new Contract(address, _abi, signerOrProvider) as ERC721A;
  }
}
